<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="asyncapi-framework">
  <title>AsyncAPI Document Type (Framework)</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>AsyncAPI documents<indexterm>Editing features</indexterm></indexterm>
        <indexterm>AsyncAPI documents<indexterm>Content completion</indexterm></indexterm>
        <indexterm>AsyncAPI documents<indexterm>Validation</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_okg_cgk_54b"><ph keyref="product"/> includes a specialized framework for working with
      AsyncAPI files. The application supports the following AsyncAPI versions:
        <codeph>1.0.0</codeph>, <codeph>1.1.0</codeph>, <codeph>1.2.0</codeph>,
        <codeph>2.0.0</codeph>, <codeph>2.0.0-rc1</codeph>, <codeph>2.0.0-rc2</codeph>,
        <codeph>2.1.0</codeph>, <codeph>2.2.0</codeph>, <codeph>2.3.0</codeph>,
        <codeph>2.4.0</codeph>.</p>
    <section id="section_mp3_5ld_rtb">
      <title>Editing AsyncAPI Documents</title>
      <p id="p_np3_5ld_rtb">You can edit AsyncAPI files in <uicontrol>Text</uicontrol> mode and you
        have access to all the <xref href="word-line-actions.dita#word-line-actions">usual text
          editing actions</xref><ph product="editor editorEclipse"> and you can also edit them in
          the visual <uicontrol>Author</uicontrol> editing mode and you have access to the various
          features and actions that are available when <xref
            href="editing-xml-documents-author.dita">editing XML documents in
              <uicontrol>Author</uicontrol> mode</xref></ph>.</p>
    </section>
    <section id="document_templates">
      <title>Default Document Templates</title>
      <p id="p_zkk_cgk_54b">There are some default AsyncAPI templates available when creating <xref
          href="new-dialog-sa.dita#new-dialog-sa" product="developer editor">new documents from
          templates</xref><xref href="creating-from-templates.dita#creating-from-templates"
          product="developerEclipse editorEclipse">new documents from templates</xref> and they can
        be found in the <menucascade>
          <uicontrol>Framework Templates</uicontrol>
          <uicontrol>AsyncAPI 1.x</uicontrol>
        </menucascade> and <menucascade>
          <uicontrol>Framework Templates</uicontrol>
          <uicontrol>AsyncAPI 2.x</uicontrol>
        </menucascade> folders. Each of those folders contain a default new document template for a
        JSON version and a YAML version.</p>
    </section>
    <section id="section_n2p_sld_rtb">
      <title>Content Completion</title>
      <p id="p_o2p_sld_rtb"><ph keyref="product"/> helps you edit AsyncAPI files through the <xref
          keyref="glossentry_content-completion-assistant"><term>Content Completion
          Assistant</term></xref>, offering proposals for properties and values that can be inserted
        at the cursor position. It can be manually activated with the <uicontrol
          conkeyref="reusable-oxygen-shortcuts-list/ctrl_space"/> shortcut.</p>
    </section>
    <section id="section_bfn_tld_rtb">
      <title>Validation</title>
      <p id="p_z3g_cgk_54b"><ph keyref="product"/> includes built-in validation for AsyncAPI
        documents to help you keep them well-formed. The documents are validated automatically as
        you type against the schema specified in the framework and problems are highlighted within
        the document.</p>
    </section>
  </body>
</topic>
