<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="sameSiteNone">
  <title>Cross-Domain Cookies</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Cookies</indexterm>
        <indexterm>Cross-domain cookies</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_nqr_dgk_54b">Cookies are one of the methods available for adding a persistent state to websites and they
      are essential for running <ph keyref="webappProduct"/>.</p>
    <p id="p_oqr_dgk_54b">In an effort to enforce more privacy-preserving defaults, modern browsers have changed the
      default behavior of cookies. They will no longer be set for cross-domain requests by
      default.</p>
    <section id="section_c25_rqy_vmb">
      <title>Cross-Domain Cookies and <ph keyref="webappProduct"/></title>
      <p id="p_pqr_dgk_54b">When <ph keyref="webappProduct"/> is embedded in an iframe and served from a hostname that
        is different from the parent web application, the default cookies behavior will prevent it
        from setting any cookies.</p>
      <p id="p_qqr_dgk_54b">If serving <ph keyref="webappProduct"/> on a hostname that is different
        from the parent web application is  unavoidable, you can force cookies to be set with the
          <codeph>SameSite=None</codeph> attribute and the <codeph>Secure</codeph> attribute (while
        also deactivating the "X-Frame-Options" header that is set to "SAMESITE" by default) by
        setting the <xref href="customizing-options.dita#customizing-options/force-cookies"
          product="waCustom"><codeph>force.cookies.samesite.none</codeph> option to
            <codeph>true</codeph></xref><xref
          href="https://www.oxygenxml.com/doc/ug-waCustom/topics/customizing-options.html"
          format="html" scope="external" product="webauthor"
            ><codeph>force.cookies.samesite.none</codeph> option to
          <codeph>true</codeph></xref>.<note importance="high" id="note_rqr_dgk_54b">The
            <codeph>SameSite=None</codeph> cookie attribute can only be set when the
            <codeph>Secure</codeph> attribute is set, so you will be forced to also serve <ph
            keyref="webappProduct"/> over HTTPS.</note></p>
    </section>
  </body>
</topic>