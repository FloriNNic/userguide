<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="wa-mermaid">
  <title>Web Author Mermaid Plugin</title>
  <body>
    <p>A free plugin is available to edit <xref href="https://mermaid.js.org/" format="html"
        scope="external">Mermaid</xref> diagrams and charts embedded in your XML documents. Mermaid
      renders Markdown-inspired text definitions for dynamically creating and modifying
      diagrams.</p>
    <section id="section_kjw_5t3_bzb">
      <title>How to Build the Plugin</title>
      <p id="p_ljw_5t3_bzb">Run the following
        commands:<codeblock xml:space="preserve" outputclass="language-bourne">npm install
npm run compile
mvn package</codeblock></p>
      <p id="p_rdf_v53_bzb">The plugin archive will be available in
          <filepath>target/web-author-Mermaid-plugin-[version]-plugin.jar</filepath>.</p>
    </section>
    <section id="section_ftf_y53_bzb">
      <title>How to Develp the Plugin</title>
      <p id="p_jdd_z53_bzb">Run the following
        commands:<codeblock xml:space="preserve" outputclass="language-bourne">mvn compile
npm run watch</codeblock></p>
      <p id="p_j5v_1v3_bzb">Then, follow the instructions in <xref
          href="webapp-plugin-prototyping.dita"/>. More details about implementing a custom form
        control can be found in <xref keyref="jscript_api_formcontrol">JS Tutorial: Implementing a
          Custom Form Control</xref>.</p>
    </section>
    <section id="section_mld_qv3_bzb">
      <title>Installation</title>
      <p id="p_nld_qv3_bzb">
        <ol id="ul_pvs_qv3_bzb">
          <li id="li_qvs_qv3_bzb">
            <p id="p_rvs_qv3_bzb">Build the plugin.</p>
          </li>
          <li id="li_svs_qv3_bzb">
            <p id="p_tvs_qv3_bzb">Use the Web Author <xref href="webapp-admin-page.dita"
                >Administration Page</xref> to upload the plugin.</p>
          </li>
          <li id="li_wcg_tv3_bzb">Restart the Web Author server.</li>
        </ol>
      </p>
    </section>
    <section id="section_mmq_vv3_bzb"><title>Usage</title><p id="p_v1s_wv3_bzb">The rendering
        support is implemented as a custom form control with the renderer class
          <codeph>com.oxygenxml.webapp.mermaid.WebappMermaidRenderer</codeph>.</p><p
        id="p_w1s_wv3_bzb">By default, it is added on elements with
          <codeph>outputclass="mermaid-diagram"</codeph> or
          <codeph>outputclass="embed-mermaid-diagram"</codeph>.</p><p id="p_x1s_wv3_bzb">To add it
        on another element, you can add a CSS rule in your framework that is similar to
        this:</p><codeblock xml:space="preserve" outputclass="language-css">  my-diagram-element {
    visibility: -oxy-collapse-text;
    content: oxy_editor(
      webappRendererClassName, "com.oxygenxml.webapp.mermaid.WebappMermaidRenderer"
      edit, "custom");
  }</codeblock><p id="p_cvq_fy3_bzb">To edit the diagram, the user needs to click the
          <uicontrol>Edit</uicontrol> button located in the bottom-left corner of the diagram.</p><p
        id="p_phw_wx3_bzb"><image href="../img/mermaid_diagram.png"/></p><p id="p_y1s_wv3_bzb">A
        pane is revealed in the left side of the diagram where you can make edits and the result
        will be reflected in the diagram preview simultaneously.</p><image
        href="../img/mermaid_diagram_edit.png"/></section>
  </body>
</topic>
