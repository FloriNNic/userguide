<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_graphics_svg_templates">
    <title>SVG Templates</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Graphics<indexterm>SVG Templates</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
    <body>
    <p id="p_smv_dgk_54b"><ph keyref="product"/> supports SVG template images (with a
        <codeph>.template.svg</codeph> file extension). These files can contain XPath expressions
      that will be expanded by the processor.</p>
    <section id="section_ulv_4tz_lyb">
      <title>Using SVG Template as a Cover Page</title>
      <p>A good use-case for SVG templates is when you want to create a custom cover page. For
          example:<ol id="ol_dds_1wr_lyb">
          <li>Suppose the following HTML file should be printed with a cover
            page:<codeblock id="codeblock_o54_y5r_lyb" outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE html>
&lt;html xmlns="http://www.w3.org/1999/xhtml">
    &lt;head>
        &lt;title>How to Dynamically add Content to SVG&lt;/title>
        &lt;link rel="stylesheet" href="styles.css"/>
        &lt;meta name="author" content="John Doe"/>
        &lt;meta name="version" content="1.1"/>
        &lt;meta name="copyright" content="Â© Oxygen PDF Chemistry. For demonstration purpose."/>
    &lt;/head>
    &lt;body>
        ...
    &lt;/body>
&lt;/html></codeblock></li>
          <li>The cover image (for example, named <filepath>cover.template.svg</filepath>) should
            display <xmlelement>meta</xmlelement> nodes information and the main title. Both the
              <i>author</i> and <i>version</i> will be displayed in rectangular shapes prefixed with
            the displayed information ("Author:" and
              "Version"):<codeblock id="codeblock_o4b_nvr_lyb" outputclass="language-xml">&lt;svg width="8.5in" height="11in" xmlns="http://www.w3.org/2000/svg">
  &lt;g>
    &lt;rect height="39" width="180" y="40" x="579" stroke="#000" fill="#fff"/>
    &lt;rect height="39" width="180" y="79" x="579" stroke="#000" fill="#fff"/>
    &lt;text font-size="8" stroke-width="0" y="52" x="582" stroke="#000" fill="#000000"
      >Author:&lt;/text>
    &lt;text font-size="16" stroke-width="0" y="66" x="643" stroke="#000" fill="#000000"
      >${//meta[@name='author']/@content}&lt;/text>
    &lt;text font-size="8" stroke-width="0" y="91" x="582" stroke="#000" fill="#000000"
      >Version:&lt;/text>
    &lt;text font-size="16" stroke-width="0" y="104" x="659" stroke="#000" fill="#000000"
      >${//meta[@name='version']/@content}&lt;/text>
    &lt;text font-size="30" stroke-width="0" y="252" x="123" stroke="#000" fill="#000000"
      >${//head/title}&lt;/text>
    &lt;text font-size="12" stroke-width="0" y="993.40002" x="266" stroke="#000" fill="#000000"
      >${//meta[@name='copyright']/@content}&lt;/text>
  &lt;/g>
&lt;/svg></codeblock><note id="note_nkn_dxr_lyb" type="other" othertype="Notes">
              <ul id="ul_ixf_3xr_lyb">
                <li>XPath expressions are not expanded if the SVG template is open in
                    <uicontrol>Author</uicontrol> mode.</li>
                <li>XPath expressions can be tested (without <codeph>${}</codeph>) using the
                  XPath/XQuery Builder view.</li>
              </ul>
            </note></li>
          <li>The CSS stylesheet should declare a synthetic page to be printed before the HTML
            document and display the SVG cover image on this new
            page:<codeblock id="codeblock_tj4_zwr_lyb" outputclass="language-css">@page cover-page {
  background-image: url('cover.template.svg');
  background-repeat: no-repeat;
}

html::before {
  content: " ";
  page: cover-page;
}</codeblock></li>
          <li>After the transformation, the final document cover will look like this:<image
              placement="break" href="../img/ch_svg_xpath.png" id="image_hvk_jyr_lyb"/></li>
        </ol></p>
    </section>
  </body>
</topic>
